{"version":3,"sources":["components/weather.js","components/Home.js","App.js","index.js"],"names":["refresh","window","location","reload","CardExampleCard","weatherData","className","name","Button","inverted","color","circular","icon","onClick","moment","format","main","temp","humidity","Date","sys","sunrise","toLocaleTimeString","sunset","Home","to","path","component","link","document","createElement","href","body","appendChild","click","App","useState","lat","setLat","long","setLong","data","setData","useEffect","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","then","res","json","result","console","log","fetchData","Dimmer","active","Loader","ReactDOM","render","getElementById"],"mappings":"wSAKMA,EAAU,WACdC,OAAOC,SAASC,UA6BHC,EA1BS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAF,OACpB,sBAAKC,UAAU,OAAf,UAEI,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,SAAd,SAAwBD,EAAYE,OACpC,cAACC,EAAA,EAAD,CAAQF,UAAU,SAASG,UAAQ,EAACC,MAAM,OAAOC,UAAQ,EAACC,KAAK,UAAUC,QAASb,OAGpF,sBAAKM,UAAU,OAAf,UACE,oBAAGA,UAAU,MAAb,kBAAyBQ,MAASC,OAAO,WACzC,mBAAGT,UAAU,MAAb,SAAoBQ,MAASC,OAAO,WAGtC,sBAAKT,UAAU,OAAf,UACE,oBAAGA,UAAU,OAAb,yBAAiCD,EAAYW,KAAKC,KAAlD,YACA,oBAAGX,UAAU,OAAb,uBAA+BD,EAAYW,KAAKE,SAAhD,WAGF,sBAAKZ,UAAU,OAAf,UACE,oBAAGA,UAAU,iBAAb,sBAAwC,IAAIa,KAA+B,IAA1Bd,EAAYe,IAAIC,SAAgBC,mBAAmB,YACpG,oBAAGhB,UAAU,iBAAb,qBAAuC,IAAIa,KAA8B,IAAzBd,EAAYe,IAAIG,QAAeD,mBAAmB,mB,kCCzB7F,SAASE,IACpB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAI,SAAV,SAAoB,wBAAQnB,UAAU,UAAlB,kCAClB,cAAC,IAAD,CACEoB,KAAK,SACLC,UAAW,WACT,IAAIC,EAAOC,SAASC,cAAc,KAKlC,OAJAF,EAAKG,KAAO,mCACZF,SAASG,KAAKC,YAAYL,GAE1BA,EAAKM,QACE,WCVN,SAASC,IACtB,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,qBAAU,YACO,uCAAG,sBAAAC,EAAA,6DAChBC,UAAUC,YAAYC,oBAAmB,SAASC,GAChDV,EAAOU,EAASC,OAAOC,UACvBV,EAAQQ,EAASC,OAAOE,cAHV,SAMVC,MAAM,GAAD,OAAIC,0CAAJ,yBAAkDhB,EAAlD,gBAA6DE,EAA7D,+BAAwFc,qCAClGC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJf,EAAQe,GACRC,QAAQC,IAAIF,MAVE,2CAAH,qDAafG,KACC,CAACvB,EAAIE,IAGN,sBAAKjC,UAAU,MAAf,UACwB,oBAAbmC,EAAKzB,KACZ,cAAC,EAAD,CAASX,YAAaoC,IAEtB,8BACE,cAACoB,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACC,EAAA,EAAD,4BAIN,cAACvC,EAAD,O,OChCNwC,IAASC,OACL,cAAC,EAAD,IACFpC,SAASqC,eAAe,W","file":"static/js/main.220539ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.css';\r\nimport moment from 'moment';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst refresh = () => {\r\n  window.location.reload();\r\n}\r\n\r\nconst CardExampleCard = ({weatherData}) => (\r\n    <div className=\"main\">  \r\n\r\n        <div className=\"top flex header\">\r\n          <h1 className=\"header\">{weatherData.name}</h1>\r\n          <Button className=\"button\" inverted color='blue' circular icon='refresh' onClick={refresh} />\r\n        </div>\r\n\r\n        <div className=\"flex\">\r\n          <p className=\"day\">Day: {moment().format('dddd')}</p>\r\n          <p className=\"day\">{moment().format('LL')}</p>\r\n        </div>\r\n  \r\n        <div className=\"flex\">\r\n          <p className=\"temp\">Temprature: {weatherData.main.temp} &deg;C</p>\r\n          <p className=\"temp\">Humidity: {weatherData.main.humidity} %</p>\r\n        </div>\r\n        \r\n        <div className=\"flex\">\r\n          <p className=\"sunrise-sunset\">Sunrise: {new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString('en-IN')}</p>\r\n          <p className=\"sunrise-sunset\">Sunset: {new Date(weatherData.sys.sunset * 1000).toLocaleTimeString('en-IN')}</p>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n\r\nexport default CardExampleCard;","  \r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n\r\nexport default function Home(){\r\n    return(\r\n      <BrowserRouter>\r\n        <Link to={\"/route\"}><button className='btnHome'>Return To Homepage</button></Link>\r\n          <Route\r\n            path=\"/route\"\r\n            component={() => {\r\n              var link = document.createElement(\"a\");\r\n              link.href = \"https://www.develop-griffin.com/\";\r\n              document.body.appendChild(link);\r\n\r\n              link.click();\r\n              return null;\r\n            }}\r\n          />\r\n      </BrowserRouter>\r\n      ); \r\n}","import './App.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Weather from './components/weather';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\nimport Home from './components/Home'\r\n\r\nexport default function App() {\r\n  const [lat, setLat] = useState([]);\r\n  const [long, setLong] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      navigator.geolocation.getCurrentPosition(function(position) {\r\n        setLat(position.coords.latitude);\r\n        setLong(position.coords.longitude);\r\n      });\r\n\r\n      await fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        setData(result)\r\n        console.log(result);\r\n      });\r\n    }\r\n    fetchData();\r\n  }, [lat,long])\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      {(typeof data.main != 'undefined') ? (\r\n        <Weather weatherData={data}/>\r\n      ): (\r\n        <div>\r\n          <Dimmer active>\r\n            <Loader>Loading..</Loader>\r\n          </Dimmer>\r\n        </div>\r\n      )}\r\n      <Home />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}